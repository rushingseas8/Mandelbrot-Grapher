#BlueJ class context
comment0.params=
comment0.target=Drawer()
comment0.text=\n\ Sets\ up\ the\ initial\ size\ of\ the\ JFrame,\ as\ well\ as\ adds\ the\ KeyListener\ and\ starts\ the\ main\ loop.\n\ Instantiate\ this\ when\ you're\ ready\ to\ begin\ using\ Mandelbrot.\n
comment1.params=
comment1.target=void\ main()
comment1.text=\n\ A\ static\ main\ method\ that\ just\ creates\ a\ new\ Drawer\ Object\ for\ you\ to\ make\ life\ easier.\n
comment10.params=g2d
comment10.target=void\ drawFire(java.awt.Graphics2D)
comment11.params=
comment11.target=void\ run()
comment12.params=
comment12.target=void\ run()
comment13.params=
comment13.target=void\ run()
comment14.params=
comment14.target=void\ run()
comment15.params=g2d
comment15.target=void\ drawInfo(java.awt.Graphics2D)
comment16.params=
comment16.target=void\ zoomIn()
comment17.params=
comment17.target=void\ zoomOut()
comment18.params=
comment18.target=void\ moveUp()
comment19.params=
comment19.target=void\ moveDown()
comment2.params=
comment2.target=void\ run()
comment2.text=\n\ @Override\ Runs\ the\ main\ loop\ and\ tries\ to\ update\ at\ 60fps.\ Can/will\ be\ less\ during\ a\ calculation.\n
comment20.params=
comment20.target=void\ moveLeft()
comment21.params=
comment21.target=void\ moveRight()
comment22.params=key
comment22.target=void\ keyReleased(java.awt.event.KeyEvent)
comment23.params=key
comment23.target=void\ keyPressed(java.awt.event.KeyEvent)
comment24.params=key
comment24.target=void\ keyTyped(java.awt.event.KeyEvent)
comment3.params=g
comment3.target=void\ paint(java.awt.Graphics)
comment3.text=\n\ Calls\ update(),\ and\ then\ draws\ whatever\ changes\ were\ made\ there\ to\ the\ backbuffer,\ which\ is\ then\ drawn\ to\ screen.\n\ @Override\ \n
comment4.params=
comment4.target=void\ update()
comment4.text=\n\ This\ is\ where\ the\ primary\ drawing\ logic\ goes.\ Accounts\ for\ any\ changes\ due\ to\ zooming\ or\ panning,\ updates\ the\ variables\ accordingly,\n\ draws\ a\ white\ background\ as\ default\ (to\ avoid\ transparencies),\ and\ then\ draws\ the\ actual\ Mandelbrot\ graph\ using\ the\ proper\ shaders.\n
comment5.params=g2d
comment5.target=void\ drawGreyScale(java.awt.Graphics2D)
comment5.text=\n\ Draws\ the\ graph,\ with\ current\ zoom/pan\ settings,\ in\ a\ pure\ black/white\ shade.\ \n
comment6.params=g2d\ c
comment6.target=void\ drawColorAlgoI(java.awt.Graphics2D,\ java.awt.Color)
comment7.params=g2d\ c
comment7.target=void\ drawColorAlgoII(java.awt.Graphics2D,\ java.awt.Color)
comment8.params=g2d\ code
comment8.target=void\ drawColorMultiple(java.awt.Graphics2D,\ int)
comment9.params=g2d
comment9.target=void\ drawWater(java.awt.Graphics2D)
numComments=25
